<Window x:Class="WifiManager.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WifiManager"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="WifiStrengh">
                <Grid Style="{x:Null}">
                    <materialDesign:Chip 
        Content="{Binding AccessPoint.SignalStrength}"
        IconBackground="{DynamicResource PrimaryHueDarkBrush}"
        IconForeground="{DynamicResource PrimaryHueDarkForegroundBrush}" FontSize="24">
                        <materialDesign:Chip.Icon>
                            <materialDesign:PackIcon
                Kind="Wifi"></materialDesign:PackIcon>
                        </materialDesign:Chip.Icon>
                    </materialDesign:Chip>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="WifiIsConnect">
                <Grid>
                    <!--<ToggleButton
  Style="{StaticResource MaterialDesignSwitchToggleButton}"
  ToolTip="MaterialDesignSwitchToggleButton"
  IsChecked="{Binding AccessPoint.IsConnected,Mode=OneWay}" />-->
                    <CheckBox IsChecked="{Binding AccessPoint.IsConnected,Mode=OneWay}"></CheckBox>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="1.5*"/>
                <RowDefinition Height="20*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <materialDesign:Chip
        Content="Wifi List"
        IconBackground="{DynamicResource PrimaryHueDarkBrush}"
        IconForeground="{DynamicResource PrimaryHueDarkForegroundBrush}" FontSize="24">
                    <materialDesign:Chip.Icon>
                        <materialDesign:PackIcon
                Kind="CastConnected"></materialDesign:PackIcon>
                    </materialDesign:Chip.Icon>
                </materialDesign:Chip>
            </Grid>
            <Grid Grid.Row="1">
                <Viewbox HorizontalAlignment="Right" Margin="0,0,20,0">
                    <Button 
                        Command="{Binding ListAllCommand}"
                        Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        ToolTip="MaterialDesignFloatingActionLightButton" >
                        <materialDesign:PackIcon
                            Kind="Refresh"
                            Height="auto"
                            Width="auto" />
                    </Button>
                </Viewbox>
              
            </Grid>
            <Grid Grid.Row="2">
                <DataGrid
  Margin="0 8 0 0"
  ItemsSource="{Binding AccessPointList}"
  CanUserSortColumns="True"
  CanUserAddRows="False"
  AutoGenerateColumns="False"
  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
  materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn
      Binding="{Binding IsSelected}"
      ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
      EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                            <DataGridCheckBoxColumn.Header>
                                <!--padding to allow hit test to pass thru for sorting -->
                                <Border
          Background="Transparent"
          Padding="6 0 6 0"
          HorizontalAlignment="Center">
                                    <CheckBox
            HorizontalAlignment="Center"
            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
            IsChecked="{Binding IsAllItems3Selected}" />
                                </Border>
                            </DataGridCheckBoxColumn.Header>
                        </DataGridCheckBoxColumn>


                        <DataGridTemplateColumn
      CellTemplate="{DynamicResource WifiStrengh}"
                   
      Header="Strength"
       />
                        
                        
                  
                        <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                        
                        
                        <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding AccessPoint.Name}"
      Header="Name"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                        <!-- set a max length to get an indicator in the editor -->
                       
                        
                        <DataGridTemplateColumn
      CellTemplate="{DynamicResource WifiIsConnect}"
      Header="Connnect Status"
       />
                        
                        
                        <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding Numeric}"
      Header="Number with long header"
      Width="120"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                            <DataGridTextColumn.HeaderStyle>
                                <Style
          TargetType="{x:Type DataGridColumnHeader}"
          BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                    <Setter
            Property="HorizontalAlignment"
            Value="Right" />
                                    <Setter
            Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock
                  TextWrapping="Wrap"
                  Text="{Binding}"
                  TextAlignment="Right" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style
          TargetType="{x:Type TextBlock}">
                                    <Setter
            Property="HorizontalAlignment"
            Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </materialDesign:MaterialDataGridTextColumn>
                         <!--use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo--> 
                       
                        
                        <materialDesign:MaterialDataGridComboBoxColumn
      Header="Food"
      SelectedValueBinding="{Binding Food}"
      ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />
                        
                        
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</Window>
